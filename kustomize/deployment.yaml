apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole
  labels:
    app: pihole
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pihole
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: pihole
        name: pihole
#      annotations:
#        prometheus.io/scrape: 'true'
#        prometheus.io/port: '9617'
    spec:
      volumes:
      - name: data-etc-pihole
        persistentVolumeClaim:
          claimName: pihole-root-pvclaim

      - name: config-volume
        configMap:
          name: pihole-config

      dnsPolicy: "None"
      dnsConfig:
        nameservers:
          - 10.14.1.1

      containers:
        - name: pihole
          image: pihole/pihole:2022.12
          imagePullPolicy: IfNotPresent

          ports:
            - name: dns-tcp
              containerPort: 53
              protocol: TCP

            - name: dns-udp
              containerPort: 53
              protocol: UDP

            - name: dhcp-udp
              containerPort: 67
              protocol: UDP

            - name: http-tcp
              containerPort: 80
              protocol: TCP

            - name: https-tcp
              containerPort: 443
              protocol: TCP

          volumeMounts:
            - name: data-etc-pihole
              mountPath: /etc/pihole
            - name: config-volume
              mountPath: /etc/pihole/pihole-FTL.conf
              subPath: pihole-FTL.conf
            - name: config-volume
              mountPath: /etc/dnsmasq.d/custom-dns.conf
              subPath: custom-dns.conf
#            {{- if .Values.config.adlists }}
#            - name: config-volume
#              mountPath: /etc/pihole/adlists.list
#              subPath: adlists.list
#            {{- end }}
#            {{- if .Values.config.blacklist }}
#            - name: config-volume
#              mountPath: /etc/pihole/black.list
#              subPath: black.list
#            - name: config-volume
#              mountPath: /etc/pihole/blacklist.txt
#              subPath: blacklist.txt
#            {{- end }}
#            {{- if .Values.config.blacklistRegex }}
#            - name: config-volume
#              mountPath: /etc/pihole/regex.list
#              subPath: regex.list
#            {{- end }}
#            {{- if .Values.config.whitelist }}
#            - name: config-volume
#              mountPath: /etc/pihole/whitelist.txt
#              subPath: whitelist.txt
#            {{- end }}

          env:
            - name: IPV4_ADDRESS
              value: 10.14.1.4/24
            - name: DNS1
              value: 10.14.1.1
            - name: DNS2
              value: 10.14.1.1
            - name: ServerIP
              value: 10.14.1.4
            - name: TZ
              value: "America/Chicago"
            - name: WEBPASSWORD
              value: pihole
#              valueFrom:
#                secretKeyRef:
#                  name: pihole-ui-secret
#                  key: password

          # livenessProbe:
          #   exec:
          #     command:
          #       - nslookup
          #       - -timeout=2
          #       - google.com
          #       - {{ .Values.service.ip }}
          #   initialDelaySeconds: 60
          #   periodSeconds: 30
            # httpGet:
            #   path: /
            #   port: http-tcp
            # initialDelaySeconds: 60
            # periodSeconds: 30

          livenessProbe:
            httpGet:
              path: /
              port: 80
              scheme: HTTP
            initialDelaySeconds: 120
            timeoutSeconds: 5
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 5

          readinessProbe:
            httpGet:
              path: /
              port: 80
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 20